<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sf.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.sf.model.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="usertype" jdbcType="INTEGER" property="usertype" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="groups" jdbcType="VARCHAR" property="groups" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="lasttime" jdbcType="TIMESTAMP" property="lasttime" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="profilehead" jdbcType="VARCHAR" property="profilehead" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userid, password, nickname, usertype, sex, age, groups, status, lasttime, starttime, 
    profilehead, profile
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from userinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sf.model.UserInfo">
    insert into userinfo (id, userid, password, 
      nickname, usertype, sex, 
      age, groups, status, 
      lasttime, starttime, profilehead, 
      profile)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{usertype,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{groups,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{lasttime,jdbcType=TIMESTAMP}, #{starttime,jdbcType=TIMESTAMP}, #{profilehead,jdbcType=VARCHAR}, 
      #{profile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sf.model.UserInfo">
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="groups != null">
        groups,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="profilehead != null">
        profilehead,
      </if>
      <if test="profile != null">
        profile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="groups != null">
        #{groups,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="profilehead != null">
        #{profilehead,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sf.model.UserInfo">
    update userinfo
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="groups != null">
        groups = #{groups,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="profilehead != null">
        profilehead = #{profilehead,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sf.model.UserInfo">
    update userinfo
    set userid = #{userid,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      usertype = #{usertype,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      groups = #{groups,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      lasttime = #{lasttime,jdbcType=TIMESTAMP},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      profilehead = #{profilehead,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>